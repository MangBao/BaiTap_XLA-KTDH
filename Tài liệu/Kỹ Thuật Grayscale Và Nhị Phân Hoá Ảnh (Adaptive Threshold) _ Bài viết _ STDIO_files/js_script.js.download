var ID_IMAGE = ['#id_image0',
                '#id_image1',
                '#id_image2'
];

var ID_FORM_BOX = [ '#id_form_box0',
                    '#id_form_box1',
                    '#id_form_box2'
];

var ID_CAPTCHA = [  '#id_captcha0',
                    '#id_captcha1',
                    '#id_captcha2'
];

$.fn.animateRotate = function (angle, duration, easing, complete) {
    var args = $.speed(duration, easing, complete);
    var step = args.step;
    return this.each(function (i, e) {
        args.complete = $.proxy(args.complete, e);
        args.step = function (now) {
            $.style(e, 'transform', 'rotate(' + now + 'deg)');
            if (step) return step.apply(e, arguments);
        };

        $({ deg: 0 }).animate({ deg: angle }, args);
    });
};

// ====================================================|
// articles(_ajax): FUNCTIONS FOR ARTICLES             |
// ====================================================|

var articles = {

    ready: function (METHOD, PARAMS, DEVICES) {

        PARAMS = JSON.parse(PARAMS);
        DEVICES = JSON.parse(DEVICES);

        if (METHOD == 'article') {

            comments_post.ready('ARTICLES', PARAMS[0], PARAMS[1]);

            articles.outline.build('id_outline_box');
            if (DEVICES._PATH == 'pc') {
                articles.qr_code.init('id_qr_code', IO.URL.HOME + '/articles/' + PARAMS[1] + '-' + PARAMS[0]);
            }
        }
        else if (METHOD == 'comments') {
            comments_post.ready('ARTICLES', PARAMS[0], PARAMS[1]);
        }
    },

    search: {
        onsubmit : function(form)
        {
            if (form.elements['q'].value.trim().length < 2)
                return false;
        }
    },

    outline: {

        build: function (node_id) {
            var index = 0;

            $("article h2,article h3,article h4").each(function () {
                var tagName = $(this)[0].tagName.toLowerCase();
                var content = $(this)[0].innerHTML;

                var nameAtt = content.toLowerCase();
                nameAtt = IO.U2A(nameAtt);

                nameAtt = nameAtt.replace(/[^a-zA-Z\d\s]/g, ' ');
                nameAtt = nameAtt.replace(/\s+/g, ' ').trim();
                nameAtt = nameAtt.replace(/ /g, '-');
                nameAtt = index++ + '-' + nameAtt;

                var node = $('<' + tagName + '>', { id: nameAtt, name: nameAtt }).html(content);
                $(this).replaceWith(node);

                var a = $('<a>', { href: IO.URL.FULL + '#' + nameAtt }).html(content);
                var div = $('<div>', { class: 'outline_' + tagName }).append(a);
                $('#' + node_id).append(div);
            });
        }
    },

    qr_code: {

        init : function(id, param)
        {           
            var qrcode = new QRCode(id, {
                text: param,
                width: 300,
                height: 300,
                colorDark : "#000000",
                colorLight : "#ffffff",
                correctLevel : QRCode.CorrectLevel.H
            });
        }
    },

    search_dancing: function () {

        var STDIO_HarlemShake = document.createElement('audio');
        var resource = IO.URL.HOME + '/makeup/shared/sfx_harlem_shake';
        var currentState = 0;

        if (STDIO_HarlemShake.canPlayType('audio/mpeg')) {
            STDIO_HarlemShake.setAttribute('src', resource + '.mp3');
        }

        if (STDIO_HarlemShake.canPlayType('audio/ogg')) {
            STDIO_HarlemShake.setAttribute('src', resource + '.ogg');
        }

        STDIO_HarlemShake.addEventListener('canplaythrough', function () {
            this.play();
        });

        var intervalId_1;
        var intervalId_2;
        var intervalId_3;

        var angle_45 = 0;
        var angle_direction = 1;

        STDIO_HarlemShake.addEventListener("timeupdate", function () {
            if (this.currentTime > 0.5) {
                if (currentState == 0) {
                    currentState++;
                    intervalId_1 = setInterval(function () {
                        $('#id_logo').effect('shake', { times: 2 }, 1000);
                    }, 1000);
                }
            }
            if (this.currentTime > 14) {
                if (currentState == 1) {
                    currentState++;
                    intervalId_2 = setInterval(function () {
                        $('#id_center').effect('shake', { times: 10, direction: 'down' }, 2000);
                        $('#id_wrapper_introduction_center').effect('shake', { times: 4, distance: 100, direction: 'right' }, 2000);
                        $('#id_center').effect('shake', { times: 4, distance: 100, direction: 'left' }, 2000);
                    }, 2000);

                    intervalId_3 = setInterval(function () {
                        angle_45 += 45;
                        angle_direction = -angle_direction;

                        $('#id_content-column-1').animateRotate(30);
                        $('#id_content-column-2').animateRotate(angle_45, 1);
                        $('#id_content-column-3').animateRotate(angle_direction * 360, 1000);
                    }, 1000);
                }
            }

            if (this.currentTime > 27) {
                if (currentState == 2) {
                    currentState++;

                    clearInterval(intervalId_1);
                    clearInterval(intervalId_2);
                    clearInterval(intervalId_3);

                    $('#id_logo').effect('shake', { times: 2 }, 3000);
                    $('#id_center').effect('shake', { times: 2, direction: 'down' }, 3000);
                    $('#id_wrapper_introduction_center').effect('shake', { times: 2, direction: 'right' }, 3000);
                    $('#id_center').effect('shake', { times: 2, direction: 'right' }, 3000);

                    angle_45 += 45;
                    angle_direction = -angle_direction;

                    $('#id_content-column-1').animateRotate(angle_direction * 360, 2500);
                    $('#id_content-column-2').animateRotate(angle_direction * 360, 2500);
                    $('#id_content-column-3').animateRotate(angle_direction * 360, 2500);
                }
            }
        });

        STDIO_HarlemShake.addEventListener("ended", function () {
            $('#id_content-column-1').animateRotate(0);
            $('#id_content-column-2').animateRotate(0);
            $('#id_content-column-3').animateRotate(0);
        });
    }

};

var comments_post = {

    STORAGE_FEATURE: 'comments_post_feature',
    STORAGE_OWNERID: 'comments_post_owner_id',
    STORAGE_SLOADED: 'comments_post_is_loaded',
    STORAGE_ORDER: 'comments_post_order',
    STORAGE_BAITID: 'comments_post_bait_id',

    ready: function (feature, post_id, owner_id) {

        IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_FEATURE, feature);
        IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_OWNERID, owner_id);
        IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_ORDER,
            (feature === 'USERS' ? 'desc' : 'asc'));

        if ($(window).width() / $(document).width() < $(window).height() / $(document).height()) {
            IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_SLOADED, 1);
            IO.COMPONENTS.ICONS.LOADING.Add('id-comments-component', 'id_icon_loading_comments');
            comments_post.load('id-comments-component', post_id);
        }
        else {
            IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_SLOADED, 0);

            $(window).scroll(function () {
                var tabletPadding = 512;
                var scrollBottom = $(window).scrollTop() + $(window).height() + tabletPadding;
                if (scrollBottom > $('.comments-component').position().top) {
                    var is_loaded = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_SLOADED);
                    if (is_loaded == 0) {
                        IO.COMPONENTS.STORAGE.SetItem(comments_post.STORAGE_SLOADED, 1);
                        IO.COMPONENTS.ICONS.LOADING.Add('id-comments-component', 'id_icon_loading_comments');
                        comments_post.load('id-comments-component', post_id);
                    }
                }
            });
        }
    },

    reply_input: {

        show: function (obj, id) {
            var reply_input = $('#' + id).find('.reply_input');
            var textarea    = $('#' + id).find('textarea');
            var is_display  = !($(reply_input).css('display') == 'none');

            if (is_display == false) {
                $(reply_input).show();
                $(obj).addClass("active");
                $(textarea).autoGrow();
            }
            else {
                $(reply_input).hide();
                $(obj).removeClass("active");
            }
        }
    },

    load: function (id, post_id, call_back) {

        var feature  = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_FEATURE);
        var owner_id = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_OWNERID);
        var order    = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_ORDER);

        $.ajax({
            url: "/comments_post/load",
            type: "POST",
            data: {
                a_feature: feature,
                a_post_id: post_id,
                a_owner_id: owner_id,
                a_order: order
            },
            dataType: "html"
        }).done(function (msg) {
            res = JSON.parse(msg);
            if (res._RESULT === true) {
                $('#' + id).html(res._DATA[0]);
                $('textarea').autoGrow();
            } else {
                $('#' + id).html(res._DATA[0]);
            }

            if (call_back != null)
                call_back();
        });
    },

    add: function (post_id, parent_id, call_back) {

        var feature  = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_FEATURE);
        var owner_id = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_OWNERID);

        var bait_id = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_BAITID);
        
        var comments_container = $('#id_comments_container-' + post_id);
        var replies_container = $('#id_replies_container-' + parent_id);

        var comment_textarea = $('#id_comment_input_container').find('textarea');
        var reply_textarea = $('#id_reply_input_container-' + parent_id).find('textarea');

        var reply_input = $('#id_reply_input_container-' + parent_id).find('.reply_input');

        var content =   parent_id == 0 ?
                        comment_textarea.val() :
                        reply_textarea.val();

        if (content.length < IO.STRING_MIN_LENGTH ||
            content.length > IO.STRING_MAX_LENGTH) {
            UI.POPUPS.Alert({description:'Bình luận của bạn tối thiểu ' + IO.STRING_MIN_LENGTH + ' ký tự, tối đa ' + IO.STRING_MAX_LENGTH + ' ký tự.'});
            return;
        }

        UI.FREEZE.Enable();

        $.ajax({
            url: "/comments_post/add",
            type: "POST",
            data: {
                a_feature: feature,
                a_post_id: post_id,
                a_owner_id: owner_id,
                a_parent_id: parent_id,
                a_content: content,
                a_bait_id: bait_id
            },
            dataType: "html"
        }).done(function (msg) {

            UI.FREEZE.Disable();

            res = JSON.parse(msg);

            if (res._RESULT === true) {

                var order = IO.COMPONENTS.STORAGE.GetItem(comments_post.STORAGE_ORDER);

                if (parent_id == 0) {
                    comment_textarea.val(IO.CHAR.EMPTY);

                    if (order == 'asc')
                        comments_container.append(res._DATA[1]);
                    else
                        comments_container.prepend(res._DATA[1]);

                    $('id_button_follower').addClass('active');

                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
                else {
                    reply_textarea.val(IO.CHAR.EMPTY);
                    replies_container.append(res._DATA[1]);

                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
            }
            else {
                UI.POPUPS.Alert({description:res._DATA[0]});
            }
        });
    }
}

// ====================================================|
// news(_ajax): FUNCTIONS FOR NEWS               	   |
// ====================================================|

var news = {

    ready: function (METHOD, PARAMS, DEVICES) {
        PARAMS = JSON.parse(PARAMS);
        DEVICES = JSON.parse(DEVICES);

        if (METHOD == 'read') {

            /*
            $("article img").each(function () {
                $(this).replaceWith('<a class="pointer" onclick="replete_modal.image(\'' + $(this).attr('src') + '\')">' + $(this)[0].outerHTML + '</a>');
            });
            */

            comments_post.ready('NEWS', PARAMS[0], PARAMS[1]);
        }
    },

    show_reply_comment_input: function (id) {
        if ($('#' + id).css('display') == 'none') {
            $('#' + id).show();
            $('#id_comment_level2_button_reply_' + id).addClass("active");
            $('#input_reply_comment-' + id).autoGrow();
        } else {
            $('#' + id).hide();
            $('#id_comment_level2_button_reply_' + id).removeClass("active");
        }
    },
};

var news_ajax = {

};

// ====================================================|
// contact(_ajax): FUNCTIONS FOR CONTACT               |
// ====================================================|

var contact = {

};

var contact_ajax = {

    add: function (evt) {
        evt = evt || null;
        if (evt != null && evt.which != IO.KEYS.RETURN)
            return;

        var name = $('#id-name').val();
        var email = $('#id-email').val();
        var phone = $('#id-phone').val();
        var content = $('#id-content').val();
        var captcha = $('#id-captcha').val();

        UI.FREEZE.Enable();

        $.ajax({
            url: "/contact_ajax/add",
            type: "POST",
            data: {
                a_name: name,
                a_email: email,
                a_phone: phone,
                a_content: content,
                a_captcha: captcha
            },
            dataType: "html"
        })
            .done(function (msg) {

                UI.FREEZE.Disable();

                res = JSON.parse(msg);

                if (res._RESULT === true) {
                    $('#id-name').val('');
                    $('#id-email').val('');
                    $('#id-phone').val('');
                    $('#id-content').val('');
                    $('#id-captcha').val('');

                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                }

                $('#id-captcha-img').html(res._DATA[1]);
            });
    }
};

// ====================================================|
// training(_ajax): FUNCTIONS FOR TRAINING             |
// ====================================================|

var training = {

    ready: function (METHOD, PARAMS, DEVICES) {
    }
};

// ====================================================|
// users(_ajax): FUNCTIONS FOR USERS                   |
// ====================================================|

var users = {

    ready: function (METHOD, PARAMS, DEVICES) {
        PARAMS = JSON.parse(PARAMS);
        DEVICES = JSON.parse(DEVICES);

        if (METHOD == 'account') {
            comments_post.ready('USERS', PARAMS[0], PARAMS[1]);
        }
        else if (METHOD == 'comments') {
            comments_post.ready('USERS', PARAMS[0], PARAMS[1]);
        }
    },

    profiles: {

        show_update_username_input: function () {
            $('#text_username').hide();
            $('#input_username').val($('#input_username-current').val().trim());
            $('#input_username').show();
            $('#input_username').focus();
        },

        show_update_profiles_input: function (info_id) {
            $('#text-' + info_id).hide();
            $('#input-' + info_id).show();
            $('#input-' + info_id).val($('#input-' + info_id + '-current').val().trim());
            $('#input-' + info_id).focus();
        },

        show_add_about_input: function (id) {
            if ($('#input_add_about-' + id).css('display') == 'none') {
                // VALIDATE MAX 10
                if ($('.info_about_box_content').length >= 10) {
                    UI.POPUPS.Alert({description:'Bạn đã đạt tối đa 10 phần giới thiệu về bản thân.'});
                    return;
                }

                $('#button_add_about-' + id).hide();
                $('#input_add_about-' + id).show();
            } else {
                $('#button_add_about-' + id).show();
                $('#input_add_about-' + id).hide();
            }
        },

        show_update_about_input: function (id) {
            if ($('#input_update_about-' + id).css('display') == 'none') {
                $('#info_about-' + id).hide();
                $('#input_update_about-' + id).show();

                var title = $('#info_about-' + id + ' .title').text();
                var content = $('#info_about-' + id + ' .content').text();

                content = IO.br2nl(content);

                $('#input_update_about-' + id + ' input').val(title);
                $('#input_update_about-' + id + ' textarea').val(content);
            } else {
                $('#info_about-' + id).show();
                $('#input_update_about-' + id).hide();
            }
        }
    },

    show_reply_comment_input: function (id) {
        if ($('#' + id).css('display') == 'none') {
            $('#' + id).show();
            $('#id_comment_level2_button_reply_' + id).addClass("active");
            $('#input_reply_comment-' + id).autoGrow();
        } else {
            $('#' + id).hide();
            $('#id_comment_level2_button_reply_' + id).removeClass("active");
        }
    },

    verification_resend: function () {
        UI.FREEZE.Enable();

        $.ajax({
            url: "/users_ajax/verification_resend",
            type: "POST",
            dataType: "html"
        })
            .done(function (msg) {
                UI.FREEZE.Disable();
                var res = JSON.parse(msg);

                if (res._RESULT == true) {
                    UI.POPUPS.Alert({description:res._DATA[0]},
                                    {close:function(){IO.redirect(IO.URL.HOME)}});
                } else {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
            });
    }
};

var users_ajax = {

    signup: function (evt) {
        evt = evt || null;
        if (evt != null && evt.which != IO.KEYS.RETURN)
            return;

        var username = $('#id_username').val().trim().replace(/\s+/g, ' ');
        var email_1 = $('#id_email1').val().trim();
        var email_2 = $('#id_email_confirm1').val().trim();
        var password_1 = $('#id_password1').val().trim();
        var password_2 = $('#id_password_confirm1').val().trim();
        var captcha = $('#id_captcha').val();

        var ERROR_MESSAGE = [];

        if (username.length == 0 || captcha.length == 0 ||
            email_1.length == 0 || password_1.length == 0 ||
            email_2.length == 0 || password_2.length == 0) {
            ERROR_MESSAGE.push('Tất cả thông tin là bắt buộc.');
        } else {
            if (email_1 != email_2) {
                ERROR_MESSAGE.push('Email và Email xác nhận không khớp.');
            }
            if (password_1 != password_2) {
                ERROR_MESSAGE.push('Mật khẩu và Mật khẩu xác nhận không khớp.');
            }
        }

        if (ERROR_MESSAGE.length > 0) {
            UI.POPUPS.Alert({description:ERROR_MESSAGE.join('<br/>')});
            return;
        }

        UI.FREEZE.Enable();

        $.ajax({
            url: "/users_ajax/signup",
            type: "POST",
            data: {
                a_username: username,
                a_email: email_1,
                a_password: password_1,
                a_captcha: captcha
            },
            dataType: "html"
        }).done(function (msg) {

            UI.FREEZE.Disable();

            var res = JSON.parse(msg);

            if (res._RESULT === true) {
                UI.POPUPS.Alert({description:res._DATA[0]},
                                {close:function(){ IO.redirect(IO.URL.HOME)}});
            } else if (res._RESULT === false) {

                UI.POPUPS.Alert({description:res._DATA[0]});

                $(ID_CAPTCHA[0]).html(res._DATA[1]);
                $('#id_password1').val(IO.CHAR.EMPTY);
                $('#id_password_confirm1').val(IO.CHAR.EMPTY);
                $('#id_captcha').val(IO.CHAR.EMPTY);
            }
        });
    },

    signin: function (evt) {
        evt = evt || null;
        if (evt != null && evt.which != IO.KEYS.RETURN)
            return;

        var email = $('#input_email0').val();
        var password = $('#input_password0').val();

        if (email.length == 0 || password.length == 0) {
            UI.POPUPS.Alert({description:'Email và Mật khẩu được yêu cầu.'});
            return;
        }

        UI.FREEZE.Enable();

        $.ajax({
            url: "/users_ajax/signin",
            type: "POST",
            data: {
                a_email: email,
                a_password: password
            },
            dataType: "html"
        }).done(function (msg) {

            UI.FREEZE.Disable();
            res = JSON.parse(msg);
            console.log(res);
            if (res._RESULT === true) {
                var reffer_url = IO.COMPONENTS.STORAGE.GetItem('STDIO_REFFER_URL');
                var scope = IO.URL.SCOPES.Get(reffer_url);

                if (scope == IO.URL.SCOPES.INSIDE) {
                    var loc = IO.URL.GetLocation(reffer_url);
                    var paths = loc.pathname.split('/');
                    if (paths[1] == 'users') {
                        if (paths[2] == 'signout' ||
                            paths[2] == 'join' ||
                            paths[2] == 'join_validation' ||
                            paths[2] == 'recover_password') {
                            reffer_url = IO.URL.HOME;
                        }
                    }
                }
                else if (scope == IO.URL.SCOPES.OUTSIDE) {
                    reffer_url = IO.URL.HOME;
                }

                IO.redirect(reffer_url);
            }
            else
                UI.POPUPS.Alert({description:res._DATA[0]});
        });
    },

    recover_password: function (evt) {

        evt = evt || null;
        if (evt != null && evt.which != IO.KEYS.RETURN)
            return;

        var email = $('#input_email').val();

        if (email.length < 6) {
            UI.POPUPS.Alert({description:'Vui lòng nhập email.'});
            return;
        }

        UI.FREEZE.Enable();

        $.ajax({
            url: "/users_ajax/recover_password",
            type: "POST",
            data: { a_email: email },
            dataType: "html"
        }).done(function (msg) {

            UI.FREEZE.Disable();

            var res = JSON.parse(msg);
            if (res._RESULT === true) {
                UI.POPUPS.Alert({description:res._DATA[0]});
            } else {
                UI.POPUPS.Alert({description:res._DATA[0]});
            }
        });
    },

    change_password: function (evt) {
        evt = evt || null;
        if (evt != null && evt.which != IO.KEYS.RETURN)
            return;

        var password_cur = $('#input_password_cur').val();
        var password_new = $('#input_password_new').val();
        var password_con = $('#input_password_con').val();

        if (password_new.length < 6 || password_new.length > 32) {
            UI.POPUPS.Alert({description:'Password tối thiểu 6 kí tự và tối đa 32 kí tự.'});
            return;
        }

        if (password_new != password_con) {
            UI.POPUPS.Alert({description:'Password và Password xác nhận không khớp.'});
            return;
        }

        $.ajax({
            url: "/users_ajax/change_password",
            type: "POST",
            data: { a_password_cur: password_cur, a_password_new: password_new },
            dataType: "html"
        })
            .done(function (msg) {
                var res = JSON.parse(msg);
                if (res._RESULT == true) {
                    $('#input_password_cur').val(IO.CHAR.EMPTY);
                    $('#input_password_new').val(IO.CHAR.EMPTY);
                    $('#input_password_con').val(IO.CHAR.EMPTY);

                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
            });
    },

    change_current_role: function (role_value) {
        $.ajax({
            url: "/users_ajax/change_current_role",
            type: "POST",
            data: { a_role_value: role_value },
            dataType: "html"
        }).done(function (msg) {
            res = JSON.parse(msg);
            if (res._RESULT === true) {
                $('#id_wrapper_role_center_id').html(res._DATA[0]);
            }
        });
    },

    profiles: {

        upload_picture: function () {
            var ext = $('#input_picture_browser').val().split('.').pop().toLowerCase();
            var files = $("#input_picture_browser").get(0).files;

            if ($.inArray(ext, ['png', 'jpg', 'jpeg', 'gif']) == -1 ||
                files.length != 1 ||
                files[0].size > 4 * 1024 * 1024 ||
                files[0].clientWidth > 2048 ||
                files[0].clientHeight > 2048
            ) {
                UI.POPUPS.Alert({description:'Hỗ trợ ảnh png, jpg, gif - tối đa 2048px x 2048px, kích thước < 4MB. Vui lòng kiểm tra lại hình ảnh trước khi tải lên.'});
                return;
            }

            UI.FREEZE.Enable();

            var data = new FormData();
            data.append("a_picture", files[0]);

            $.ajax({
                type: "POST",
                url: "/users_ajax/profiles_upload_picture",
                contentType: false,
                processData: false,
                data: data
            }).done(function (msg) {

                UI.FREEZE.Disable();
                $('#input_picture_browser').val(IO.CHAR.EMPTY);
                $('#picture_mask').fadeOut();

                var res = JSON.parse(msg);

                if (res._RESULT === true) {
                    $('#picture_profile img').prop('src', res._DATA[0]);
                } else if (res._RESULT === false) {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:'Lỗi không xác định, vui lòng liên hệ với Admin để chúng tôi tìm hiểu giúp bạn.'});
                }
            });
        },

        update_username: function (evt) {
            evt = evt || null;
            if (evt != null && evt.which != IO.KEYS.RETURN)
                return;

            if ($('#input_username-current').val().trim() == $('#input_username').val().trim()) {
                $('#text_username').show();
                $('#input_username').hide();
                return;
            }

            var username = $('#input_username').val().trim();
            username = username.replace(/\s+/g, IO.CHAR.SPACE);

            if (username == IO.CHAR.EMPTY) {
                UI.POPUPS.Alert({description:'Vui lòng nhập họ tên đầy đủ.'});

                $('#text_username').show();
                $('#input_username').hide();
                return;
            }

            var fl_name = username.split(IO.CHAR.SPACE);
            if (fl_name.length < 2) {
                UI.POPUPS.Alert({description:'Vui lòng nhập họ tên đầy đủ.'});
                
                $('#text_username').show();
                $('#input_username').hide();
                return;
            }

            if (username == $('#text_username').text()) {
                $('#input_username').hide();
                $('#text_username').show();
                return;
            }

            $.ajax({
                url: "/users_ajax/profiles_update_username",
                type: "POST",
                data: { a_username: username },
                dataType: "html"
            })
                .done(function (msg) {
                    var res = JSON.parse(msg);

                    if (res._RESULT === true) {
                        $('#input_username-current').val($('#input_username').val());
                        $('#text_username').text($('#input_username').val());
                    } else if (res._RESULT === false) {
                        UI.POPUPS.Alert({description:res._DATA[0]});
                    } else {
                        UI.POPUPS.Alert({description:'Lỗi không xác định, vui lòng liên hệ với Admin để chúng tôi tìm hiểu giúp bạn.'});
                    }

                    $('#text_username').show();
                    $('#input_username').hide();
                });
        },

        update_profiles: function (info_id, evt) {
            evt = evt || null;
            if (evt != null && evt.which != IO.KEYS.RETURN)
                return;

            content = $('#input-' + info_id).val().trim();

            if (content == IO.CHAR.EMPTY) {
                 UI.POPUPS.Alert({description:'Vui lòng nhập thông tin đầy đủ.'});
                return;
            }

            if ($('#input-' + info_id + '-current').val() == content) {
                $('#input-' + info_id).hide();
                $('#text-' + info_id).show();
                return;
            }

            $.ajax({
                url: "/users_ajax/profiles_update_profiles",
                type: "POST",
                data: { a_prop: info_id, a_content: content },
                dataType: "html"
            })
                .done(function (msg) {
                    var res = JSON.parse(msg);
                    if (res._RESULT === true) {
                        $('#input-' + info_id + '-current').val($('#input-' + info_id).val());
                        $('#text-' + info_id).text($('#input-' + info_id).val());
                    } else if (res._RESUTL === false) {
                        UI.POPUPS.Alert({description:res._DATA[0]});
                    } else {
                        UI.POPUPS.Alert({description:'Server đang bận, vui lòng thử lại sau.'});
                    }

                    $('#text-' + info_id).show();
                    $('#input-' + info_id).hide();
                });
        },

        add_about: function (id) {
            var title = $('#input_add_about-' + id + ' input').val().trim();
            var content = $('#input_add_about-' + id + ' textarea').val().trim();

            // VALIDATE INPUT
            if (title == IO.CHAR.EMPTY || content == IO.CHAR.EMPTY) {
                UI.POPUPS.Alert({description:'Vui lòng nhập thông tin đầy đủ.'});
                return;
            }

            // SUBMIT
            $.ajax({
                url: "/users_ajax/profiles_add_about",
                type: "POST",
                data: { a_index: id, a_title: title, a_content: content },
                dataType: "html"
            }).done(function (msg) {

                var res = JSON.parse(msg);

                if (res._RESULT === true) {
                    $('#id_about').html(res._DATA[0]);
                } else if (res._RESULT === false) {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:'Server đang bận, vui lòng thử lại sau.'});
                }
            });
        },

        update_about: function (id) {
            var title = $('#input_update_about-' + id + ' input').val().trim();
            var content = $('#input_update_about-' + id + ' textarea').val().trim();

            if (title == IO.CHAR.EMPTY || content == IO.CHAR.EMPTY) {
                UI.POPUPS.Alert({description:'Vui lòng nhập thông tin đầy đủ.'});
                return;
            }

            $.ajax({
                url: "/users_ajax/profiles_update_about",
                type: "POST",
                data: { a_index: id, a_title: title, a_content: content },
                dataType: "html"
            }).done(function (msg) {
                var res = JSON.parse(msg);
                if (res._RESULT === true) {
                    $('#id_about').html(res._DATA[0]);
                } else if (res._RESULT === false) {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:'Server đang bận, vui lòng thử lại sau.'});
                }
            });
        },

        delete_about: function (id) {
            $.ajax({
                url: "/users_ajax/profiles_delete_about",
                type: "POST",
                data: { a_index: id },
                dataType: "html"
            }).done(function (msg) {
                var res = JSON.parse(msg);
                if (res._RESULT === true) {
                    $('#id_about').html(res._DATA[0]);
                } else if (res._RESULT === false) {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                } else {
                    UI.POPUPS.Alert({description:'Server đang bận, vui lòng thử lại sau.'});
                }
            });
        }
    },

    switch_bookmark: function (self,article_id) {
        $.ajax({
            url: "/users_ajax/switch_bookmark",
            type: "POST",
            data: { a_id: article_id },
            dataType: "html"
        }).done(function (msg) {
            res = JSON.parse(msg);
            if (res._RESULT !== null) {
                if (res._RESULT === true) {
                    if(res._DATA[0] == true)
                        $(self).addClass('active');
                    else
                        $(self).removeClass('active');

                    $(self).prop('title', res._DATA[1]);
                    $(self).html(res._DATA[2]);
                } else {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
            }
        });
    },

    comments_articles: {

        unfollow: function (article_id) {
            $.ajax({
                url: "/users_ajax/unfollow_article_comments",
                type: "POST",
                data: { a_article_id: article_id },
                dataType: "html"
            }).done(function (msg) {
                res = JSON.parse(msg);
                if (res._RESULT === true) {
                    $('#id_follow_article-' + article_id).addClass('text_decoration_line_through');
                    $('#button_unfollow_article-' + article_id).hide();
                } else {
                    UI.POPUPS.Alert({description:res._DATA[0]});
                }
            });
        },

        switch_follow: function (self, article_id) {
            $.ajax({
                url: "/users_ajax/switch_follow_comments_articles",
                type: "POST",
                data: { a_article_id: article_id },
                dataType: "html"
            }).done(function (msg) {
                res = JSON.parse(msg);
                if (res._RESULT !== null) {
                    if (res._RESULT === true) {
                        if(res._DATA[0] == true)
                            $(self).addClass('active');
                        else
                            $(self).removeClass('active');
                        $(self).prop('title', res._DATA[1]);
                        $(self).html(res._DATA[2]);
                    } else {
                        UI.POPUPS.Alert({description:res._DATA[0]});
                    }
                }
            });
        }
    }
};

// ====================================================|
// about(_ajax): FUNCTIONS FOR ABOUT                   |
// ====================================================|

var about = {

    ready: function (METHOD, PARAM, DEVICES) {
        if (METHOD != 'read') {
        }
    },

    show_service: function (id, count) {
        
        if ($('#about_text-' + id).css('display') !== 'none')
            return;

        for (var i = 0; i < count; i++) {
            $('#about_text-' + i).hide();
            $('#about_title-' + i).removeClass("active");
        }

        $('#about_text-' + id).fadeIn();
        $('#about_title-' + id).addClass("active");
    }
};